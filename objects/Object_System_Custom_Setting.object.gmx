<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Size = room_get_name( room );
Width = room_width div 64;
Height = room_height div 64;

for( i = 0; i &lt; Width; i++ ) {

    for( j = 0; j &lt; Height; j++ ) {
    
        Grid[i,j] = noone;
    
    }

}

Mouse_Grid_X = floor( mouse_x / 64 );
Mouse_Grid_Y = floor( mouse_y / 64 );
Mouse_Position_X = Mouse_Grid_X * 64;
Mouse_Position_Y = Mouse_Grid_Y * 64;

Available = true;

Select = 0;
Block = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = mouse_x;
y = mouse_y;

Mouse_Grid_X = floor( mouse_x / 64 );
Mouse_Grid_Y = floor( mouse_y / 64 );
Mouse_Position_X = Mouse_Grid_X * 64;
Mouse_Position_Y = Mouse_Grid_Y * 64;

if( ( Mouse_Grid_X &gt;= 0 &amp;&amp; Mouse_Grid_X &lt; Width ) &amp;&amp; ( Mouse_Grid_Y &gt;= 0 &amp;&amp; Mouse_Grid_Y &lt; Height ) ) {

    if( Grid[Mouse_Grid_X,Mouse_Grid_Y] == noone )  { Available = true; }
    else { Available = false; }

    if( mouse_check_button( mb_left ) &amp;&amp; Available &amp;&amp; Mouse_Position_Y &lt; Object_System_Custom_Menu.y ) {

        Grid[Mouse_Grid_X,Mouse_Grid_Y] = Block;
        with( instance_create( Mouse_Position_X + 32, Mouse_Position_Y + 32, Object_System_Custom_Block ) ) {
    
            switch( other.Block ) {
        
                case noone : sprite_index = -1; break;
                case 0 : sprite_index = Sprite_Wall_64; break;
                case 1 : sprite_index = Sprite_Ball_64; break;
                case 2 : sprite_index = Sprite_Pipe_64; break;
                case 3 : sprite_index = Sprite_Fire_64_Center; break;
                case 4 : sprite_index = Sprite_Water_64_Center; break;
                case 5 : sprite_index = Sprite_Pollution_64_Center; break;
        
            }   
            if( other.Block == 1 ) {
            
                if( Object_System_Custom_Menu_Ball.Ball ) {
                
                    other.Grid[other.Mouse_Grid_X,other.Mouse_Grid_Y] = noone;
                    instance_destroy();
                
                }
                else {
                
                    Object_System_Custom_Menu_Ball.Ball = true;
                    Ball = true;
                    
                }
            
            } else { Ball = false; }
            
            if( other.Block == 2 ) {
            
                if( Object_System_Custom_Menu_Pipe.Pipe ) {
                
                    other.Grid[other.Mouse_Grid_X,other.Mouse_Grid_Y] = noone;
                    instance_destroy();
                
                }
                else {
                
                    Object_System_Custom_Menu_Pipe.Pipe = true;
                    Pipe = true;
                    
                }
            
            } else { Pipe = false; }
    
        }

    }

    if( mouse_check_button( mb_right ) &amp;&amp; Available == false ) {

        Grid[Mouse_Grid_X,Mouse_Grid_Y] = noone;

    }

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha( 0.2 );
if( Available ) { draw_rectangle_colour( Mouse_Position_X, Mouse_Position_Y, Mouse_Position_X + 64, Mouse_Position_Y + 64, c_black, c_black, c_black, c_black, false ); }
else { draw_rectangle_colour( Mouse_Position_X, Mouse_Position_Y, Mouse_Position_X + 64, Mouse_Position_Y + 64, c_red, c_red, c_red, c_red, false ); }
draw_set_alpha( 1 );

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto( Room_Stage );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
