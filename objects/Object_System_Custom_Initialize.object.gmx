<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open( "Custom_Stage.ini" );

if( !ini_section_exists( "Stage" + string( global.Stage_Last[2] ) ) ) {

    room_goto( Room_Stage ); 
    
}

Room_Size = ini_read_string( "Stage" + string( global.Stage_Last[2] ), "Room Size", noone );
switch( Room_Size ) {

    case "Room_Custom_Small" :
        
        room_width = 1280;
        room_height = 720;
        break;
        
    case "Room_Custom_Medium" :
        
        room_width = 1920;
        room_height = 1080;
        break;

    case "Room_Custom_Large" :
        
        room_width = 2560;
        room_height = 1440;
        break;
        
}

Room_Width = ini_read_real( "Stage" + string( global.Stage_Last[2] ), "Room Width", noone );
Room_Height = ini_read_real( "Stage" + string( global.Stage_Last[2] ), "Room Height", noone );

var check;

for( i = 0; i &lt; Room_Width; i++ ) {

    for( j = 0; j &lt; Room_Height; j++ ) {
    
        check = ini_read_real( "Stage" + string( global.Stage_Last[2] ), "Block Placement [" + string( i ) + "," + string( j ) + "]", noone );
        if( check == 2 ) { instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Pipe_64 ); break; }
        
    
    }
    
    if( check == 2 ) { break; }

}

instance_create( 0, 0, Object_System_StageInGame );

for( i = 0; i &lt; Room_Width; i++ ) {

    for( j = 0; j &lt; Room_Height; j++ ) {
    
        check = ini_read_real( "Stage" + string( global.Stage_Last[2] ), "Block Placement [" + string( i ) + "," + string( j ) + "]", noone );
        if( check == 1 ) { instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Ball ); break; }
        
    
    }
    
    if( check == 1 ) { break; }

}

instance_create( 0, 0, Object_Ball_UI );

for( i = 0; i &lt; Room_Width; i++ ) {

    for( j = 0; j &lt; Room_Height; j++ ) {
    
        check = ini_read_real( "Stage" + string( global.Stage_Last[2] ), "Block Placement [" + string( i ) + "," + string( j ) + "]", noone );
        switch( check ) {
        
            case noone : break;    
            case 0 : instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Wall_64 ); break;
            case 3 : instance_create( 32 + ( i * 64 ), 64 + ( j * 64 ), Object_Fire_64 ); break;
            case 4 : instance_create( 32 + ( i * 64 ), 64 + ( j * 64 ), Object_Water_64 ); break;
            case 5 : instance_create( 32 + ( i * 64 ), 64 + ( j * 64 ), Object_Pollution_64 ); break;
            case 6 : instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Wall_Broken_64 ); break;
            case 7 : instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Wall_Bridge_64 ); break;
            case 8 : instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Wall_Broken_Bridge_64 ); break;
            case 9 : instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Wall_Grass_Top_64 ); break;
            case 10 : instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Wall_Grass_Mid_64 ); break;
            case 11 : instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Wall_Grass_Bot_64 ); break;
            case 12 : instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Filter_64 ); break;
            case 13 : instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Purifier_64 ); break;
            case 14 : instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Sponge_64 ); break;
            case 15 : instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Fan_64 ); break;
            case 16 : instance_create( 32 + ( i * 64 ), 32 + ( j * 64 ), Object_Fan_Wind_64 ); break;
            case 17 : instance_create( 32 + ( i * 64 ), 64 + ( j * 64 ), Object_Jumper_Leaf_64 ); break;
            case 18 : instance_create( 32 + ( i * 64 ), 16 + ( j * 64 ), Object_Drain_Up_64 ); break;
            case 19 : instance_create( 32 + ( i * 64 ), 48 + ( j * 64 ), Object_Drain_Down_64 ); break;
        
        }
        
    
    }

}

ini_close();

global.Stage_Fire[global.World,global.Stage_Last[2]] = instance_number( Object_Fire_64 );


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
